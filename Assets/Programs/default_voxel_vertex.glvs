#version 420 core

// Standard GLRenv2 PerObject buffer layout
layout(std140) uniform PerObject
{
	mat4 World;
	mat4 View;
	mat4 Proj;
	mat4 WorldView;
	mat4 WorldViewProj;
};

layout(location = 0) in vec3 PosL;
layout(location = 1) in vec3 NormalL;
layout(location = 2) in vec3 BinormalL;
layout(location = 3) in vec3 TangentL;
layout(location = 4) in vec3 Tex;

out vec3 PosWS;
out vec3 PosVS;
out vec3 TangentVS;
out vec3 BinormalVS;
out vec3 NormalVS;
out vec3 TexOut;

void main()
{
	// Flip the v coord of the UVs to compensate for OpenGL's upside down texture coordinates
	TexOut = vec3(Tex.x, 1.f, Tex.z) - vec3(0.f, Tex.y, 0.f);

	PosWS = (World * vec4(PosL, 1.f)).xyz;
	PosVS = (WorldView * vec4(PosL, 1.f)).xyz;

	TangentVS = mat3(WorldView) * TangentL;
	BinormalVS = mat3(WorldView) * BinormalL;
	NormalVS = mat3(WorldView) * NormalL;

	gl_Position = WorldViewProj * vec4(PosL, 1.f);
}